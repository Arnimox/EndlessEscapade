using System.Reflection;
using Terraria;
using Terraria.Localization;
using Terraria.ModLoader;
using MonoMod.Cil;
using Mono.Cecil.Cil;
using EEMod.EEWorld;

namespace EEMod
{
    public partial class EEMod : Mod
    {
      internal static void PreSaveAndQuit()
       {

           Mod[] mods = ModLoader.Mods;
           for (int i = 0; i < mods.Length; i++)
           {
               mods[i].PreSaveAndQuit();
           }
       }
       public void Return()
       {
           GenerationProgress progress = new GenerationProgress();
           ReturnOnName(baseWorldName, progress);
       }
       private void ReturnOnName(string text, GenerationProgress progress)
       {
           Main.ActiveWorldFileData = WorldFile.GetAllMetadata($@"C:\Users\{Environment.UserName}\Documents\My Games\Terraria\ModLoader\Worlds\{text}.wld", false);
           WorldGen.playWorld();
       }
       public static void SaveAndQuit(Action callback = null)
       {
           Main.PlaySound(SoundID.MenuClose);
           PreSaveAndQuit();
           ThreadPool.QueueUserWorkItem(SaveAndQuitCallBack, callback);
       }
       public static void SaveAndQuitCallBack(object threadContext)
       {
           isSaving = true;
           try
           {
               Main.PlaySound(SoundID.Waterfall, -1, -1, 0);
               Main.PlaySound(SoundID.Lavafall, -1, -1, 0);
           }
           catch
           {
           }
           if (Main.netMode == NetmodeID.SinglePlayer)
           {
               WorldFile.CacheSaveTime();
           }
           Main.invasionProgress = 0;
           Main.invasionProgressDisplayLeft = 0;
           Main.invasionProgressAlpha = 0f;
           Main.menuMode = 10;
           Main.gameMenu = true;
           Main.StopTrackedSounds();
           Terraria.Graphics.Capture.CaptureInterface.ResetFocus();
           Main.ActivePlayerFileData.StopPlayTimer();
           Player.SavePlayer(Main.ActivePlayerFileData);
           if (Main.netMode == NetmodeID.SinglePlayer)
           {
               WorldFile.saveWorld();
               Main.PlaySound(SoundID.MenuOpen);
           }
           else
           {
               Netplay.disconnect = true;
               Main.netMode = NetmodeID.SinglePlayer;
           }
           Main.fastForwardTime = false;
           Main.UpdateSundial();
           Main.menuMode = 0;
           if (threadContext != null)
           {
               ((Action)threadContext)();
           }
       }

       public static void Do_worldGenCallBack(object threadContext)
       {
           Main.PlaySound(SoundID.MenuOpen);
           WorldGen.clearWorld();
           EEMod.GenerateWorld(Main.ActiveWorldFileData.Seed, threadContext as GenerationProgress);
           WorldFile.saveWorld(Main.ActiveWorldFileData.IsCloudSave, resetTime: true);
           Main.ActiveWorldFileData = WorldFile.GetAllMetadata($@"C:\Users\{Environment.UserName}\Documents\My Games\Terraria\ModLoader\Worlds\{key1}.wld", false);
           WorldGen.playWorld();
       }
       public static void Do_worldGenCallBack2(object threadContext)
       {
           Main.PlaySound(SoundID.MenuOpen);
           WorldGen.clearWorld();
           EEMod.GenerateWorld2(Main.ActiveWorldFileData.Seed, threadContext as GenerationProgress);
           WorldFile.saveWorld(Main.ActiveWorldFileData.IsCloudSave, resetTime: true);
           Main.ActiveWorldFileData = WorldFile.GetAllMetadata($@"C:\Users\{Environment.UserName}\Documents\My Games\Terraria\ModLoader\Worlds\{key2}.wld", false);
           WorldGen.playWorld();
       }
       public static void Do_worldGenCallBack3(object threadContext)
       {
           Main.PlaySound(SoundID.MenuOpen);
           WorldGen.clearWorld();
           EEMod.GenerateWorld3(Main.ActiveWorldFileData.Seed, threadContext as GenerationProgress);
           WorldFile.saveWorld(Main.ActiveWorldFileData.IsCloudSave, resetTime: true);
           Main.ActiveWorldFileData = WorldFile.GetAllMetadata($@"C:\Users\{Environment.UserName}\Documents\My Games\Terraria\ModLoader\Worlds\{key3}.wld", false);
           WorldGen.playWorld();
       }
       public override void UpdateBadLifeRegen()
       {
           if (player.position.Y < Main.rockLayer + 80f + 640f)
           {
               _ = EESub.Enter(EESub.mySubworldID) ?? false;
           }
       }
       public static void WorldGenCallBack(object threadContext)
       {
           try
           {
               Do_worldGenCallBack(threadContext);
           }
           catch (Exception ex)
           {
               Logging.Terraria.Error((object)Language.GetTextValue("tModLoader.WorldGenError"), ex);
           }
       }
       public static void CreateNewWorld(string text, GenerationProgress progress = null)
       {
           Main.rand = new UnifiedRandom(Main.ActiveWorldFileData.Seed);
           if (text == key1)
               ThreadPool.QueueUserWorkItem(Do_worldGenCallBack, progress);
           if (text == key2)
               ThreadPool.QueueUserWorkItem(Do_worldGenCallBack2, progress);
           if (text == key3)
               ThreadPool.QueueUserWorkItem(Do_worldGenCallBack3, progress);
       }
       private void OnWorldNamed(string text, GenerationProgress progress)
       {
           if (text == key1)
           {
               string path = $@"C:\Users\{Environment.UserName}\Documents\My Games\Terraria\ModLoader\Worlds\{key1}.wld";
               if (!File.Exists(path))
               {
                   Main.worldName = text.Trim();
                   CreateNewWorld(key1, progress);
               }
               Main.ActiveWorldFileData = Terraria.IO.WorldFile.GetAllMetadata(path, false);
               WorldGen.playWorld();
           }
           if (text == key2)
           {
               string path = $@"C:\Users\{Environment.UserName}\Documents\My Games\Terraria\ModLoader\Worlds\{key2}.wld";
               if (!File.Exists(path))
               {
                   Main.worldName = text.Trim();
                   CreateNewWorld(key2, progress);
               }
               Main.ActiveWorldFileData = Terraria.IO.WorldFile.GetAllMetadata(path, false);
               WorldGen.playWorld();
           }
           if (text == key3)
           {
               string path = $@"C:\Users\{Environment.UserName}\Documents\My Games\Terraria\ModLoader\Worlds\{key3}.wld";
               if (!File.Exists(path))
               {
                   Main.worldName = text.Trim();
                   CreateNewWorld(key3, progress);
               }
               Main.ActiveWorldFileData = Terraria.IO.WorldFile.GetAllMetadata(path, false);
               WorldGen.playWorld();
           }
       }
       public void EnterSub1()
       {
           GenerationProgress progress = new GenerationProgress();
           OnWorldNamed(key1, progress);
       }
       public void EnterSub2()
       {
           GenerationProgress progress = new GenerationProgress();
           OnWorldNamed(key2, progress);
       }
       public void EnterSub3()
       {
           GenerationProgress progress = new GenerationProgress();
           OnWorldNamed(key3, progress);
       }
    }
}
